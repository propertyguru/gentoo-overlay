diff --git a/lib/carbon/conf.py b/lib/carbon/conf.py
index 24fff28..4e91263 100644
--- a/lib/carbon/conf.py
+++ b/lib/carbon/conf.py
@@ -86,7 +86,9 @@ defaults = dict(
   REWRITE_RULES='rewrite-rules.conf',
   RELAY_RULES='relay-rules.conf',
   ENABLE_LOGROTATION=True,
-  METRIC_CLIENT_IDLE_TIMEOUT=None
+  METRIC_CLIENT_IDLE_TIMEOUT=None,
+  LOG_ROTATE_SIZE=50000000,
+  LOG_MAX_ROTATE_FILES=100,
 )
 
 
diff --git a/lib/carbon/log.py b/lib/carbon/log.py
index 0f4349e..bf472bb 100644
--- a/lib/carbon/log.py
+++ b/lib/carbon/log.py
@@ -4,40 +4,24 @@ from sys import stdout, stderr
 from zope.interface import implements
 from twisted.python.log import startLoggingWithObserver, textFromEventDict, msg, err, ILogObserver
 from twisted.python.syslog import SyslogObserver
-from twisted.python.logfile import DailyLogFile
+from twisted.python.logfile import LogFile
 
 
-class CarbonLogFile(DailyLogFile):
+class CarbonLogFile(LogFile):
   """Overridden to support logrotate.d"""
   def __init__(self, *args, **kwargs):
-    DailyLogFile.__init__(self, *args, **kwargs)
     # avoid circular dependencies
     from carbon.conf import settings
+    if "rotateLength" not in kwargs:
+        kwargs["rotateLength"] = settings.LOG_ROTATE_SIZE
+    if "maxRotatedFiles" not in kwargs:
+        kwargs["maxRotatedFiles"] = settings.LOG_MAX_ROTATE_FILES
+    LogFile.__init__(self, *args, **kwargs)
     self.enableRotation = settings.ENABLE_LOGROTATION
 
-  def _openFile(self):
-    """
-    Fix Umask Issue https://twistedmatrix.com/trac/ticket/7026
-    """
-    openMode = self.defaultMode or 0777
-    self._file = os.fdopen(os.open(
-      self.path, os.O_CREAT|os.O_RDWR, openMode), 'r+', 1)
-    self.closed = False
-    # Try our best to update permissions for files which already exist.
-    if self.defaultMode:
-      try:
-        os.chmod(self.path, self.defaultMode)
-      except OSError:
-        pass
-    # Seek is needed for uniformity of stream positioning
-    # for read and write between Linux and BSD systems due
-    # to differences in fopen() between operating systems.
-    self._file.seek(0, os.SEEK_END)
-    self.lastDate = self.toDate(os.stat(self.path)[8])
-
   def shouldRotate(self):
     if self.enableRotation:
-      return DailyLogFile.shouldRotate(self)
+      return LogFile.shouldRotate(self)
     else:
       return False
 
@@ -45,12 +29,8 @@ class CarbonLogFile(DailyLogFile):
     if not self.enableRotation:
       if not os.path.exists(self.path):
         self.reopen()
-    DailyLogFile.write(self, data)
+    LogFile.write(self, data)
 
-  # Backport from twisted >= 10
-  def reopen(self):
-    self.close()
-    self._openFile()
 
 class CarbonLogObserver(object):
   implements(ILogObserver)
